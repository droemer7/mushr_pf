<launch>
    <arg name="filter_mode" default="camera" /> <!-- 3 modes: "kinematic", "camera", or "hybrid" -->
    <arg name="publish_tf" default="false" /> <!-- Set to false in sim, set to true on real robot -->
    <arg name="n_particles" default="1000"/>
    <arg name="n_viz_particles" default="60" />
    <arg name="odometry_topic" default="/vesc/odom" />
    <arg name="motor_state_topic" default="/vesc/sensors/core" />
    <arg name="servo_state_topic" default="/vesc/sensors/servo_position_command" />
    <arg name="scan_topic" default="/scan"/>
    <arg name="laser_ray_step" default="18"/> 
    <arg name="exclude_max_range_rays" default="true"/>
    <arg name="max_range_meters" default="11.0" />
	
    <node pkg="mushr_pf" type="particle_filter.py" name="particle_filter" output="screen">
        <param name="filter_mode" value="$(arg filter_mode)" />
	<param name="publish_tf" value="$(arg publish_tf)" />
        <param name="n_particles" value="$(arg n_particles)"/>
        <param name="n_viz_particles" value="$(arg n_viz_particles)"/>
        <param name="odometry_topic" value="$(arg odometry_topic)"/>
        <param name="motor_state_topic" value="$(arg motor_state_topic)" />
        <param name="servo_state_topic" value="$(arg servo_state_topic)" />
        <param name="scan_topic" value="$(arg scan_topic)"/>
        <param name="laser_ray_step" value="$(arg laser_ray_step)"/>
        <param name="exclude_max_range_rays" value="$(arg exclude_max_range_rays)" />
        <param name="max_range_meters" value="$(arg max_range_meters)" />
	</node>
    <?ignore
    <node pkg="mushr_pf" name="camera_tf" type="camera_tf.py"/>
    <include file="$(find mushr_pf)/launch/mushr_cam.launch"/> ?>
</launch>
